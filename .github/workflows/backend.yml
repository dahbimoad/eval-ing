name: Build and Push Docker Images

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

env:
  REGISTRY: docker.io
  IMAGE_NAME: imadch/microservice11

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        service:
          - name: auth-service
            context: ./backend/authentication_system/authentication_system
            dockerfile: Dockerfile
          - name: catalog-service
            context: ./backend/catalog-service
            dockerfile: Dockerfile
          - name: questionnaire-service
            context: ./backend/questionnaire-service
            dockerfile: Dockerfile
          - name: statistics-service
            context: ./backend/statistics-service/Statistics.API
            dockerfile: Dockerfile
          - name: api-gateway
            context: ./backend/api-gateway
            dockerfile: Dockerfile

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to Docker Hub
        if: github.event_name != 'pull_request'  # Ne pas pousser pour les PRs
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push Docker image
        uses: docker/build-push-action@v5
        with:
          context: ${{ matrix.service.context }}
          file: ${{ matrix.service.context }}/${{ matrix.service.dockerfile }}  # Chemin complet
          platforms: linux/amd64,linux/arm64
          push: ${{ github.event_name != 'pull_request' }}  # Push seulement sur push
          tags: |
            ${{ env.IMAGE_NAME }}:${{ matrix.service.name }}-latest
            ${{ env.IMAGE_NAME }}:${{ matrix.service.name }}-${{ github.sha }}
          cache-from: type=gha
          cache-to: type=gha,mode=max

      - name: Image pushed
        if: github.event_name != 'pull_request'
        run: echo "Pushed ${{ env.IMAGE_NAME }}:${{ matrix.service.name }}"
